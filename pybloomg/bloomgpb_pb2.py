# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bloomgpb.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='bloomgpb.proto',
  package='bloomgpb',
  syntax='proto3',
  serialized_pb=_b('\n\x0e\x62loomgpb.proto\x12\x08\x62loomgpb\"\x1d\n\rFilterRequest\x12\x0c\n\x04Name\x18\x01 \x01(\t\"_\n\nKeyRequest\x12&\n\tOperation\x18\x01 \x01(\x0e\x32\x13.bloomgpb.Operation\x12\x0c\n\x04Name\x18\x02 \x01(\t\x12\x0c\n\x04Keys\x18\x03 \x03(\t\x12\r\n\x05Token\x18\x04 \x01(\t\"\r\n\x0bListRequest\"\x11\n\x0fShutdownRequest\",\n\x08Response\x12 \n\x06Status\x18\x01 \x01(\x0e\x32\x10.bloomgpb.Status\"<\n\x0bHasResponse\x12 \n\x06Status\x18\x01 \x01(\x0e\x32\x10.bloomgpb.Status\x12\x0b\n\x03Has\x18\x02 \x03(\x08\"\x1d\n\x0cListResponse\x12\r\n\x05Names\x18\x01 \x03(\t\"1\n\x0cInfoResponse\x12!\n\x07\x46ilters\x18\x01 \x03(\x0b\x32\x10.bloomgpb.Filter\"y\n\x06\x46ilter\x12\x0c\n\x04Name\x18\x01 \x01(\t\x12\x10\n\x08\x43\x61pacity\x18\x02 \x01(\x03\x12\x0c\n\x04Hits\x18\x03 \x01(\x03\x12\x0e\n\x06Misses\x18\x04 \x01(\x03\x12\x0e\n\x06\x43hecks\x18\x05 \x01(\x03\x12\x13\n\x0bProbability\x18\x06 \x01(\x01\x12\x0c\n\x04Keys\x18\x07 \x01(\x03*\"\n\x06Status\x12\x0b\n\x07SUCCESS\x10\x00\x12\x0b\n\x07\x46\x41ILURE\x10\x01*B\n\tOperation\x12\x0b\n\x07INVALID\x10\x00\x12\n\n\x06\x43REATE\x10\x01\x12\x07\n\x03\x41\x44\x44\x10\x02\x12\t\n\x05\x43LEAR\x10\x03\x12\x08\n\x04\x44ROP\x10\x04\x32\x8a\x04\n\x05\x42loom\x12=\n\x0c\x43reateFilter\x12\x17.bloomgpb.FilterRequest\x1a\x12.bloomgpb.Response\"\x00\x12>\n\x0bListFilters\x12\x15.bloomgpb.ListRequest\x1a\x16.bloomgpb.ListResponse\"\x00\x12\x37\n\x04Info\x12\x15.bloomgpb.ListRequest\x1a\x16.bloomgpb.InfoResponse\"\x00\x12\x31\n\x03\x41\x64\x64\x12\x14.bloomgpb.KeyRequest\x1a\x12.bloomgpb.Response\"\x00\x12\x34\n\x03Has\x12\x14.bloomgpb.KeyRequest\x1a\x15.bloomgpb.HasResponse\"\x00\x12\x36\n\x05\x43lear\x12\x17.bloomgpb.FilterRequest\x1a\x12.bloomgpb.Response\"\x00\x12\x35\n\x04\x44rop\x12\x17.bloomgpb.FilterRequest\x1a\x12.bloomgpb.Response\"\x00\x12\x34\n\x05\x46lush\x12\x15.bloomgpb.ListRequest\x1a\x12.bloomgpb.Response\"\x00\x12;\n\x08Shutdown\x12\x19.bloomgpb.ShutdownRequest\x1a\x12.bloomgpb.Response\"\x00\x42\x11Z\x0f\x64omain/bloomgpbb\x06proto3')
)

_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='bloomgpb.Status',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SUCCESS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FAILURE', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=503,
  serialized_end=537,
)
_sym_db.RegisterEnumDescriptor(_STATUS)

Status = enum_type_wrapper.EnumTypeWrapper(_STATUS)
_OPERATION = _descriptor.EnumDescriptor(
  name='Operation',
  full_name='bloomgpb.Operation',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='INVALID', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CREATE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADD', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLEAR', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DROP', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=539,
  serialized_end=605,
)
_sym_db.RegisterEnumDescriptor(_OPERATION)

Operation = enum_type_wrapper.EnumTypeWrapper(_OPERATION)
SUCCESS = 0
FAILURE = 1
INVALID = 0
CREATE = 1
ADD = 2
CLEAR = 3
DROP = 4



_FILTERREQUEST = _descriptor.Descriptor(
  name='FilterRequest',
  full_name='bloomgpb.FilterRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Name', full_name='bloomgpb.FilterRequest.Name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=28,
  serialized_end=57,
)


_KEYREQUEST = _descriptor.Descriptor(
  name='KeyRequest',
  full_name='bloomgpb.KeyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Operation', full_name='bloomgpb.KeyRequest.Operation', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Name', full_name='bloomgpb.KeyRequest.Name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Keys', full_name='bloomgpb.KeyRequest.Keys', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Token', full_name='bloomgpb.KeyRequest.Token', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=59,
  serialized_end=154,
)


_LISTREQUEST = _descriptor.Descriptor(
  name='ListRequest',
  full_name='bloomgpb.ListRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=156,
  serialized_end=169,
)


_SHUTDOWNREQUEST = _descriptor.Descriptor(
  name='ShutdownRequest',
  full_name='bloomgpb.ShutdownRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=171,
  serialized_end=188,
)


_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='bloomgpb.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Status', full_name='bloomgpb.Response.Status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=190,
  serialized_end=234,
)


_HASRESPONSE = _descriptor.Descriptor(
  name='HasResponse',
  full_name='bloomgpb.HasResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Status', full_name='bloomgpb.HasResponse.Status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Has', full_name='bloomgpb.HasResponse.Has', index=1,
      number=2, type=8, cpp_type=7, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=236,
  serialized_end=296,
)


_LISTRESPONSE = _descriptor.Descriptor(
  name='ListResponse',
  full_name='bloomgpb.ListResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Names', full_name='bloomgpb.ListResponse.Names', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=298,
  serialized_end=327,
)


_INFORESPONSE = _descriptor.Descriptor(
  name='InfoResponse',
  full_name='bloomgpb.InfoResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Filters', full_name='bloomgpb.InfoResponse.Filters', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=329,
  serialized_end=378,
)


_FILTER = _descriptor.Descriptor(
  name='Filter',
  full_name='bloomgpb.Filter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Name', full_name='bloomgpb.Filter.Name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Capacity', full_name='bloomgpb.Filter.Capacity', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Hits', full_name='bloomgpb.Filter.Hits', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Misses', full_name='bloomgpb.Filter.Misses', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Checks', full_name='bloomgpb.Filter.Checks', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Probability', full_name='bloomgpb.Filter.Probability', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Keys', full_name='bloomgpb.Filter.Keys', index=6,
      number=7, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=380,
  serialized_end=501,
)

_KEYREQUEST.fields_by_name['Operation'].enum_type = _OPERATION
_RESPONSE.fields_by_name['Status'].enum_type = _STATUS
_HASRESPONSE.fields_by_name['Status'].enum_type = _STATUS
_INFORESPONSE.fields_by_name['Filters'].message_type = _FILTER
DESCRIPTOR.message_types_by_name['FilterRequest'] = _FILTERREQUEST
DESCRIPTOR.message_types_by_name['KeyRequest'] = _KEYREQUEST
DESCRIPTOR.message_types_by_name['ListRequest'] = _LISTREQUEST
DESCRIPTOR.message_types_by_name['ShutdownRequest'] = _SHUTDOWNREQUEST
DESCRIPTOR.message_types_by_name['Response'] = _RESPONSE
DESCRIPTOR.message_types_by_name['HasResponse'] = _HASRESPONSE
DESCRIPTOR.message_types_by_name['ListResponse'] = _LISTRESPONSE
DESCRIPTOR.message_types_by_name['InfoResponse'] = _INFORESPONSE
DESCRIPTOR.message_types_by_name['Filter'] = _FILTER
DESCRIPTOR.enum_types_by_name['Status'] = _STATUS
DESCRIPTOR.enum_types_by_name['Operation'] = _OPERATION
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

FilterRequest = _reflection.GeneratedProtocolMessageType('FilterRequest', (_message.Message,), dict(
  DESCRIPTOR = _FILTERREQUEST,
  __module__ = 'bloomgpb_pb2'
  # @@protoc_insertion_point(class_scope:bloomgpb.FilterRequest)
  ))
_sym_db.RegisterMessage(FilterRequest)

KeyRequest = _reflection.GeneratedProtocolMessageType('KeyRequest', (_message.Message,), dict(
  DESCRIPTOR = _KEYREQUEST,
  __module__ = 'bloomgpb_pb2'
  # @@protoc_insertion_point(class_scope:bloomgpb.KeyRequest)
  ))
_sym_db.RegisterMessage(KeyRequest)

ListRequest = _reflection.GeneratedProtocolMessageType('ListRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTREQUEST,
  __module__ = 'bloomgpb_pb2'
  # @@protoc_insertion_point(class_scope:bloomgpb.ListRequest)
  ))
_sym_db.RegisterMessage(ListRequest)

ShutdownRequest = _reflection.GeneratedProtocolMessageType('ShutdownRequest', (_message.Message,), dict(
  DESCRIPTOR = _SHUTDOWNREQUEST,
  __module__ = 'bloomgpb_pb2'
  # @@protoc_insertion_point(class_scope:bloomgpb.ShutdownRequest)
  ))
_sym_db.RegisterMessage(ShutdownRequest)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
  DESCRIPTOR = _RESPONSE,
  __module__ = 'bloomgpb_pb2'
  # @@protoc_insertion_point(class_scope:bloomgpb.Response)
  ))
_sym_db.RegisterMessage(Response)

HasResponse = _reflection.GeneratedProtocolMessageType('HasResponse', (_message.Message,), dict(
  DESCRIPTOR = _HASRESPONSE,
  __module__ = 'bloomgpb_pb2'
  # @@protoc_insertion_point(class_scope:bloomgpb.HasResponse)
  ))
_sym_db.RegisterMessage(HasResponse)

ListResponse = _reflection.GeneratedProtocolMessageType('ListResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTRESPONSE,
  __module__ = 'bloomgpb_pb2'
  # @@protoc_insertion_point(class_scope:bloomgpb.ListResponse)
  ))
_sym_db.RegisterMessage(ListResponse)

InfoResponse = _reflection.GeneratedProtocolMessageType('InfoResponse', (_message.Message,), dict(
  DESCRIPTOR = _INFORESPONSE,
  __module__ = 'bloomgpb_pb2'
  # @@protoc_insertion_point(class_scope:bloomgpb.InfoResponse)
  ))
_sym_db.RegisterMessage(InfoResponse)

Filter = _reflection.GeneratedProtocolMessageType('Filter', (_message.Message,), dict(
  DESCRIPTOR = _FILTER,
  __module__ = 'bloomgpb_pb2'
  # @@protoc_insertion_point(class_scope:bloomgpb.Filter)
  ))
_sym_db.RegisterMessage(Filter)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z\017domain/bloomgpb'))

_BLOOM = _descriptor.ServiceDescriptor(
  name='Bloom',
  full_name='bloomgpb.Bloom',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=608,
  serialized_end=1130,
  methods=[
  _descriptor.MethodDescriptor(
    name='CreateFilter',
    full_name='bloomgpb.Bloom.CreateFilter',
    index=0,
    containing_service=None,
    input_type=_FILTERREQUEST,
    output_type=_RESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ListFilters',
    full_name='bloomgpb.Bloom.ListFilters',
    index=1,
    containing_service=None,
    input_type=_LISTREQUEST,
    output_type=_LISTRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Info',
    full_name='bloomgpb.Bloom.Info',
    index=2,
    containing_service=None,
    input_type=_LISTREQUEST,
    output_type=_INFORESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Add',
    full_name='bloomgpb.Bloom.Add',
    index=3,
    containing_service=None,
    input_type=_KEYREQUEST,
    output_type=_RESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Has',
    full_name='bloomgpb.Bloom.Has',
    index=4,
    containing_service=None,
    input_type=_KEYREQUEST,
    output_type=_HASRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Clear',
    full_name='bloomgpb.Bloom.Clear',
    index=5,
    containing_service=None,
    input_type=_FILTERREQUEST,
    output_type=_RESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Drop',
    full_name='bloomgpb.Bloom.Drop',
    index=6,
    containing_service=None,
    input_type=_FILTERREQUEST,
    output_type=_RESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Flush',
    full_name='bloomgpb.Bloom.Flush',
    index=7,
    containing_service=None,
    input_type=_LISTREQUEST,
    output_type=_RESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Shutdown',
    full_name='bloomgpb.Bloom.Shutdown',
    index=8,
    containing_service=None,
    input_type=_SHUTDOWNREQUEST,
    output_type=_RESPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_BLOOM)

DESCRIPTOR.services_by_name['Bloom'] = _BLOOM

try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class BloomStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.CreateFilter = channel.unary_unary(
          '/bloomgpb.Bloom/CreateFilter',
          request_serializer=FilterRequest.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.ListFilters = channel.unary_unary(
          '/bloomgpb.Bloom/ListFilters',
          request_serializer=ListRequest.SerializeToString,
          response_deserializer=ListResponse.FromString,
          )
      self.Info = channel.unary_unary(
          '/bloomgpb.Bloom/Info',
          request_serializer=ListRequest.SerializeToString,
          response_deserializer=InfoResponse.FromString,
          )
      self.Add = channel.unary_unary(
          '/bloomgpb.Bloom/Add',
          request_serializer=KeyRequest.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.Has = channel.unary_unary(
          '/bloomgpb.Bloom/Has',
          request_serializer=KeyRequest.SerializeToString,
          response_deserializer=HasResponse.FromString,
          )
      self.Clear = channel.unary_unary(
          '/bloomgpb.Bloom/Clear',
          request_serializer=FilterRequest.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.Drop = channel.unary_unary(
          '/bloomgpb.Bloom/Drop',
          request_serializer=FilterRequest.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.Flush = channel.unary_unary(
          '/bloomgpb.Bloom/Flush',
          request_serializer=ListRequest.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.Shutdown = channel.unary_unary(
          '/bloomgpb.Bloom/Shutdown',
          request_serializer=ShutdownRequest.SerializeToString,
          response_deserializer=Response.FromString,
          )


  class BloomServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def CreateFilter(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListFilters(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Info(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Add(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Has(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Clear(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Drop(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Flush(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Shutdown(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_BloomServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CreateFilter': grpc.unary_unary_rpc_method_handler(
            servicer.CreateFilter,
            request_deserializer=FilterRequest.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'ListFilters': grpc.unary_unary_rpc_method_handler(
            servicer.ListFilters,
            request_deserializer=ListRequest.FromString,
            response_serializer=ListResponse.SerializeToString,
        ),
        'Info': grpc.unary_unary_rpc_method_handler(
            servicer.Info,
            request_deserializer=ListRequest.FromString,
            response_serializer=InfoResponse.SerializeToString,
        ),
        'Add': grpc.unary_unary_rpc_method_handler(
            servicer.Add,
            request_deserializer=KeyRequest.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'Has': grpc.unary_unary_rpc_method_handler(
            servicer.Has,
            request_deserializer=KeyRequest.FromString,
            response_serializer=HasResponse.SerializeToString,
        ),
        'Clear': grpc.unary_unary_rpc_method_handler(
            servicer.Clear,
            request_deserializer=FilterRequest.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'Drop': grpc.unary_unary_rpc_method_handler(
            servicer.Drop,
            request_deserializer=FilterRequest.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'Flush': grpc.unary_unary_rpc_method_handler(
            servicer.Flush,
            request_deserializer=ListRequest.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'Shutdown': grpc.unary_unary_rpc_method_handler(
            servicer.Shutdown,
            request_deserializer=ShutdownRequest.FromString,
            response_serializer=Response.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'bloomgpb.Bloom', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaBloomServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CreateFilter(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListFilters(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Info(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Add(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Has(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Clear(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Drop(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Flush(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Shutdown(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaBloomStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CreateFilter(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CreateFilter.future = None
    def ListFilters(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    ListFilters.future = None
    def Info(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Info.future = None
    def Add(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Add.future = None
    def Has(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Has.future = None
    def Clear(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Clear.future = None
    def Drop(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Drop.future = None
    def Flush(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Flush.future = None
    def Shutdown(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Shutdown.future = None


  def beta_create_Bloom_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('bloomgpb.Bloom', 'Add'): KeyRequest.FromString,
      ('bloomgpb.Bloom', 'Clear'): FilterRequest.FromString,
      ('bloomgpb.Bloom', 'CreateFilter'): FilterRequest.FromString,
      ('bloomgpb.Bloom', 'Drop'): FilterRequest.FromString,
      ('bloomgpb.Bloom', 'Flush'): ListRequest.FromString,
      ('bloomgpb.Bloom', 'Has'): KeyRequest.FromString,
      ('bloomgpb.Bloom', 'Info'): ListRequest.FromString,
      ('bloomgpb.Bloom', 'ListFilters'): ListRequest.FromString,
      ('bloomgpb.Bloom', 'Shutdown'): ShutdownRequest.FromString,
    }
    response_serializers = {
      ('bloomgpb.Bloom', 'Add'): Response.SerializeToString,
      ('bloomgpb.Bloom', 'Clear'): Response.SerializeToString,
      ('bloomgpb.Bloom', 'CreateFilter'): Response.SerializeToString,
      ('bloomgpb.Bloom', 'Drop'): Response.SerializeToString,
      ('bloomgpb.Bloom', 'Flush'): Response.SerializeToString,
      ('bloomgpb.Bloom', 'Has'): HasResponse.SerializeToString,
      ('bloomgpb.Bloom', 'Info'): InfoResponse.SerializeToString,
      ('bloomgpb.Bloom', 'ListFilters'): ListResponse.SerializeToString,
      ('bloomgpb.Bloom', 'Shutdown'): Response.SerializeToString,
    }
    method_implementations = {
      ('bloomgpb.Bloom', 'Add'): face_utilities.unary_unary_inline(servicer.Add),
      ('bloomgpb.Bloom', 'Clear'): face_utilities.unary_unary_inline(servicer.Clear),
      ('bloomgpb.Bloom', 'CreateFilter'): face_utilities.unary_unary_inline(servicer.CreateFilter),
      ('bloomgpb.Bloom', 'Drop'): face_utilities.unary_unary_inline(servicer.Drop),
      ('bloomgpb.Bloom', 'Flush'): face_utilities.unary_unary_inline(servicer.Flush),
      ('bloomgpb.Bloom', 'Has'): face_utilities.unary_unary_inline(servicer.Has),
      ('bloomgpb.Bloom', 'Info'): face_utilities.unary_unary_inline(servicer.Info),
      ('bloomgpb.Bloom', 'ListFilters'): face_utilities.unary_unary_inline(servicer.ListFilters),
      ('bloomgpb.Bloom', 'Shutdown'): face_utilities.unary_unary_inline(servicer.Shutdown),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Bloom_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('bloomgpb.Bloom', 'Add'): KeyRequest.SerializeToString,
      ('bloomgpb.Bloom', 'Clear'): FilterRequest.SerializeToString,
      ('bloomgpb.Bloom', 'CreateFilter'): FilterRequest.SerializeToString,
      ('bloomgpb.Bloom', 'Drop'): FilterRequest.SerializeToString,
      ('bloomgpb.Bloom', 'Flush'): ListRequest.SerializeToString,
      ('bloomgpb.Bloom', 'Has'): KeyRequest.SerializeToString,
      ('bloomgpb.Bloom', 'Info'): ListRequest.SerializeToString,
      ('bloomgpb.Bloom', 'ListFilters'): ListRequest.SerializeToString,
      ('bloomgpb.Bloom', 'Shutdown'): ShutdownRequest.SerializeToString,
    }
    response_deserializers = {
      ('bloomgpb.Bloom', 'Add'): Response.FromString,
      ('bloomgpb.Bloom', 'Clear'): Response.FromString,
      ('bloomgpb.Bloom', 'CreateFilter'): Response.FromString,
      ('bloomgpb.Bloom', 'Drop'): Response.FromString,
      ('bloomgpb.Bloom', 'Flush'): Response.FromString,
      ('bloomgpb.Bloom', 'Has'): HasResponse.FromString,
      ('bloomgpb.Bloom', 'Info'): InfoResponse.FromString,
      ('bloomgpb.Bloom', 'ListFilters'): ListResponse.FromString,
      ('bloomgpb.Bloom', 'Shutdown'): Response.FromString,
    }
    cardinalities = {
      'Add': cardinality.Cardinality.UNARY_UNARY,
      'Clear': cardinality.Cardinality.UNARY_UNARY,
      'CreateFilter': cardinality.Cardinality.UNARY_UNARY,
      'Drop': cardinality.Cardinality.UNARY_UNARY,
      'Flush': cardinality.Cardinality.UNARY_UNARY,
      'Has': cardinality.Cardinality.UNARY_UNARY,
      'Info': cardinality.Cardinality.UNARY_UNARY,
      'ListFilters': cardinality.Cardinality.UNARY_UNARY,
      'Shutdown': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'bloomgpb.Bloom', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
